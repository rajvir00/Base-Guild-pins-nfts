// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

contract ArraysExercise {
    // Initial array of numbers 1â€“10
    uint[] public numbers = [1,2,3,4,5,6,7,8,9,10];

    // Arrays to store senders and timestamps
    address[] public senders;
    uint[] public timestamps;

    // Define the Y2K timestamp constant at contract level
    uint constant Y2K_TIMESTAMP = 946702800;

    // --- Return the complete numbers array ---
    function getNumbers() public view returns (uint[] memory) {
        return numbers;
    }

    // --- Reset numbers array to its original values ---
    function resetNumbers() public {
        delete numbers; // clear the array first
        numbers = [1,2,3,4,5,6,7,8,9,10];
    }

    // --- Append to numbers array ---
    function appendToNumbers(uint[] calldata _toAppend) public {
        for (uint i = 0; i < _toAppend.length; i++) {
            numbers.push(_toAppend[i]);
        }
    }

    // --- Save sender and timestamp ---
    function saveTimestamp(uint _unixTimestamp) public {
        senders.push(msg.sender);
        timestamps.push(_unixTimestamp);
    }

    // --- Return timestamps and senders after Y2K (Jan 1, 2000) ---
    function afterY2K() public view returns (uint[] memory, address[] memory) {
        uint count;

        // Count timestamps newer than Y2K
        for (uint i = 0; i < timestamps.length; i++) {
            if (timestamps[i] > Y2K_TIMESTAMP) {
                count++;
            }
        }

        // Create new arrays with the correct size
        uint[] memory recentTimestamps = new uint[](count);
        address[] memory recentSenders = new address[](count);

        uint index;
        for (uint i = 0; i < timestamps.length; i++) {
            if (timestamps[i] > Y2K_TIMESTAMP) {
                recentTimestamps[index] = timestamps[i];
                recentSenders[index] = senders[i];
                index++;
            }
        }

        return (recentTimestamps, recentSenders);
    }

    // --- Reset senders array ---
    function resetSenders() public {
        delete senders;
    }

    // --- Reset timestamps array ---
    function resetTimestamps() public {
        delete timestamps;
    }
}
